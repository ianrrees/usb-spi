extern crate cbindgen;

use std::env;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();

    // TODO use a config file, and have it prefix enumeration values
    cbindgen::Builder::new()
        .with_language(cbindgen::Language::C)
        .with_crate(&crate_dir)
        .with_no_includes()
        .with_after_include("#pragma once")
        .with_after_include("// This file is automatically generated, modify at your peril")


        // TODO why is this necessary?
        .include_item("HardwareProtocol")
        .include_item("MasterInfo")
        .include_item("ConnectedSlaveInfoLinux")
        .include_item("EventType")
        .include_item("Event")
        .include_item("ControlIn")
        .include_item("ControlOut")

        .with_item_prefix("usb_spi_")
        .generate()
        .unwrap()
        .write_to_file("usb-spi-protocol.h");
}
